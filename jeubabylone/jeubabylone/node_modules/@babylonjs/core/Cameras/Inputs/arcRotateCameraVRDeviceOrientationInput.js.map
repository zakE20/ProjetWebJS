{"version":3,"file":"arcRotateCameraVRDeviceOrientationInput.js","sourceRoot":"","sources":["../../../../sourceES6/core/Cameras/Inputs/arcRotateCameraVRDeviceOrientationInput.ts"],"names":[],"mappings":"AAEA,OAAO,EAAgB,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AACnF,OAAO,EAAE,4BAA4B,EAAE,MAAM,4CAA4C,CAAC;AAa1F;;;GAGG;AACH,4BAA4B,CAAC,SAAS,CAAC,sBAAsB,GAAG;IAC5D,IAAI,CAAC,GAAG,CAAC,IAAI,uCAAuC,EAAE,CAAC,CAAC;IACxD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAEF;;;GAGG;AACH;IAsBI;;OAEG;IACH;QAnBA;;WAEG;QACI,oBAAe,GAAG,CAAC,CAAC;QAE3B;;WAEG;QACI,oBAAe,GAAG,CAAC,CAAC;QAEnB,WAAM,GAAG,CAAC,CAAC;QACX,WAAM,GAAG,CAAC,CAAC;QACX,WAAM,GAAG,KAAK,CAAC;QAQnB,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;IAED;;;;OAIG;IACI,+DAAa,GAApB,UAAqB,OAAoB,EAAE,gBAA0B;QACjE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACrD,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IACjF,CAAC;IAED,cAAc;IACP,qEAAmB,GAA1B,UAA2B,GAA2B;QAClD,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;SACzD;QAED,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;SACzD;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,6DAAW,GAAlB;QACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;aACnC;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACnE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;SACtD;IACL,CAAC;IAED;;;OAGG;IACI,+DAAa,GAApB,UAAqB,OAA8B;QAC/C,MAAM,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IACpF,CAAC;IAED;;;OAGG;IACI,8DAAY,GAAnB;QACI,OAAO,yCAAyC,CAAC;IACrD,CAAC;IAED;;;OAGG;IACI,+DAAa,GAApB;QACI,OAAO,qBAAqB,CAAC;IACjC,CAAC;IACL,8CAAC;AAAD,CAAC,AA3FD,IA2FC;;AAEK,gBAAiB,CAAC,yCAAyC,CAAC,GAAG,uCAAuC,CAAC","sourcesContent":["import { Nullable } from \"../../types\";\r\nimport { ArcRotateCamera } from \"../../Cameras/arcRotateCamera\";\r\nimport { ICameraInput, CameraInputTypes } from \"../../Cameras/cameraInputsManager\";\r\nimport { ArcRotateCameraInputsManager } from \"../../Cameras/arcRotateCameraInputsManager\";\r\n\r\n// Module augmentation to abstract orientation inputs from camera.\r\ndeclare module \"../../Cameras/arcRotateCameraInputsManager\" {\r\n    export interface ArcRotateCameraInputsManager {\r\n        /**\r\n         * Add orientation input support to the input manager.\r\n         * @returns the current input manager\r\n         */\r\n        addVRDeviceOrientation(): ArcRotateCameraInputsManager;\r\n    }\r\n}\r\n\r\n/**\r\n * Add orientation input support to the input manager.\r\n * @returns the current input manager\r\n */\r\nArcRotateCameraInputsManager.prototype.addVRDeviceOrientation = function(): ArcRotateCameraInputsManager {\r\n    this.add(new ArcRotateCameraVRDeviceOrientationInput());\r\n    return this;\r\n};\r\n\r\n/**\r\n * Manage the device orientation inputs (gyroscope) to control an arc rotate camera.\r\n * @see http://doc.babylonjs.com/how_to/customizing_camera_inputs\r\n */\r\nexport class ArcRotateCameraVRDeviceOrientationInput implements ICameraInput<ArcRotateCamera> {\r\n    /**\r\n     * Defines the camera the input is attached to.\r\n     */\r\n    public camera: ArcRotateCamera;\r\n\r\n    /**\r\n     * Defines a correction factor applied on the alpha value retrieved from the orientation events.\r\n     */\r\n    public alphaCorrection = 1;\r\n\r\n    /**\r\n     * Defines a correction factor applied on the gamma value retrieved from the orientation events.\r\n     */\r\n    public gammaCorrection = 1;\r\n\r\n    private _alpha = 0;\r\n    private _gamma = 0;\r\n    private _dirty = false;\r\n\r\n    private _deviceOrientationHandler: () => void;\r\n\r\n    /**\r\n     * Instantiate a new ArcRotateCameraVRDeviceOrientationInput.\r\n     */\r\n    constructor() {\r\n        this._deviceOrientationHandler = this._onOrientationEvent.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Attach the input controls to a specific dom element to get the input from.\r\n     * @param element Defines the element the controls should be listened from\r\n     * @param noPreventDefault Defines whether event caught by the controls should call preventdefault() (https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault)\r\n     */\r\n    public attachControl(element: HTMLElement, noPreventDefault?: boolean): void {\r\n        this.camera.attachControl(element, noPreventDefault);\r\n        window.addEventListener(\"deviceorientation\", this._deviceOrientationHandler);\r\n    }\r\n\r\n    /** @hidden */\r\n    public _onOrientationEvent(evt: DeviceOrientationEvent): void {\r\n        if (evt.alpha !== null) {\r\n            this._alpha = (+evt.alpha | 0) * this.alphaCorrection;\r\n        }\r\n\r\n        if (evt.gamma !== null) {\r\n            this._gamma = (+evt.gamma | 0) * this.gammaCorrection;\r\n        }\r\n        this._dirty = true;\r\n    }\r\n\r\n    /**\r\n     * Update the current camera state depending on the inputs that have been used this frame.\r\n     * This is a dynamically created lambda to avoid the performance penalty of looping for inputs in the render loop.\r\n     */\r\n    public checkInputs(): void {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n\r\n            if (this._gamma < 0) {\r\n                this._gamma = 180 + this._gamma;\r\n            }\r\n\r\n            this.camera.alpha = (-this._alpha / 180.0 * Math.PI) % Math.PI * 2;\r\n            this.camera.beta = (this._gamma / 180.0 * Math.PI);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detach the current controls from the specified dom element.\r\n     * @param element Defines the element to stop listening the inputs from\r\n     */\r\n    public detachControl(element: Nullable<HTMLElement>): void {\r\n        window.removeEventListener(\"deviceorientation\", this._deviceOrientationHandler);\r\n    }\r\n\r\n    /**\r\n     * Gets the class name of the current intput.\r\n     * @returns the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"ArcRotateCameraVRDeviceOrientationInput\";\r\n    }\r\n\r\n    /**\r\n     * Get the friendly name associated with the input class.\r\n     * @returns the input friendly name\r\n     */\r\n    public getSimpleName(): string {\r\n        return \"VRDeviceOrientation\";\r\n    }\r\n}\r\n\r\n(<any>CameraInputTypes)[\"ArcRotateCameraVRDeviceOrientationInput\"] = ArcRotateCameraVRDeviceOrientationInput;\r\n"]}