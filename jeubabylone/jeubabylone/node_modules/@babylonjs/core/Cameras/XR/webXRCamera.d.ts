import { Scene } from "../../scene";
import { FreeCamera } from "../../Cameras/freeCamera";
import { WebXRSessionManager } from "./webXRSessionManager";
/**
 * WebXR Camera which holds the views for the xrSession
 * @see https://doc.babylonjs.com/how_to/webxr
 */
export declare class WebXRCamera extends FreeCamera {
    private static _TmpMatrix;
    /**
     * Creates a new webXRCamera, this should only be set at the camera after it has been updated by the xrSessionManager
     * @param name the name of the camera
     * @param scene the scene to add the camera to
     */
    constructor(name: string, scene: Scene);
    private _updateNumberOfRigCameras;
    /** @hidden */
    _updateForDualEyeDebugging(pupilDistance?: number): void;
    /**
     * Updates the cameras position from the current pose information of the  XR session
     * @param xrSessionManager the session containing pose information
     * @returns true if the camera has been updated, false if the session did not contain pose or frame data
     */
    updateFromXRSessionManager(xrSessionManager: WebXRSessionManager): boolean;
}
