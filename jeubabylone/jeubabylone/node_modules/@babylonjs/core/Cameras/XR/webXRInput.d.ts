import { IDisposable, Scene } from "../../scene";
import { AbstractMesh } from "../../Meshes/abstractMesh";
import { WebXRExperienceHelper } from "./webXRExperienceHelper";
/**
 * Represents an XR input
 */
export declare class WebXRController {
    /**
     * Represents the part of the controller that is held. This may not exist if the controller is the head mounted display itself, if thats the case only the pointer from the head will be availible
     */
    grip?: AbstractMesh;
    /**
     * Pointer which can be used to select objects or attach a visible laser to
     */
    pointer: AbstractMesh;
    /**
     * Creates the controller
     * @see https://doc.babylonjs.com/how_to/webxr
     * @param scene the scene which the controller should be associated to
     */
    constructor(scene: Scene);
    /**
     * Disposes of the object
     */
    dispose(): void;
}
/**
 * XR input used to track XR inputs such as controllers/rays
 */
export declare class WebXRInput implements IDisposable {
    private helper;
    /**
     * XR controllers being tracked
     */
    controllers: Array<WebXRController>;
    private _tmpMatrix;
    private _frameObserver;
    /**
     * Initializes the WebXRInput
     * @param helper experience helper which the input should be created for
     */
    constructor(helper: WebXRExperienceHelper);
    /**
     * Disposes of the object
     */
    dispose(): void;
}
