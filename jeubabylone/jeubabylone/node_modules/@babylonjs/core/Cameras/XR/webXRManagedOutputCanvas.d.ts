import { Nullable } from "../../types";
import { IDisposable } from "../../scene";
import { WebXRExperienceHelper } from "./webXRExperienceHelper";
/**
 * Creates a canvas that is added/removed from the webpage when entering/exiting XR
 */
export declare class WebXRManagedOutputCanvas implements IDisposable {
    private _canvas;
    /**
     * xrpresent context of the canvas which can be used to display/mirror xr content
     */
    canvasContext: Nullable<WebGLRenderingContext>;
    /**
     * Initializes the canvas to be added/removed upon entering/exiting xr
     * @param helper the xr experience helper used to trigger adding/removing of the canvas
     * @param canvas The canvas to be added/removed (If not specified a full screen canvas will be created)
     */
    constructor(helper: WebXRExperienceHelper, canvas?: HTMLCanvasElement);
    /**
     * Disposes of the object
     */
    dispose(): void;
    private _setManagedOutputCanvas;
    private _addCanvas;
    private _removeCanvas;
}
