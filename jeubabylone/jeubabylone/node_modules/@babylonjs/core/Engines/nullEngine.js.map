{"version":3,"file":"nullEngine.js","sourceRoot":"","sources":["../../../sourceES6/core/Engines/nullEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger } from \"../Misc/logger\";\r\nimport { Nullable, FloatArray, IndicesArray } from \"../types\";\r\nimport { Scene } from \"../scene\";\r\nimport { Matrix, Color3, Color4, Viewport } from \"../Maths/math\";\r\nimport { Engine, EngineCapabilities } from \"../Engines/engine\";\r\nimport { RenderTargetCreationOptions } from \"../Materials/Textures/renderTargetCreationOptions\";\r\nimport { VertexBuffer } from \"../Meshes/buffer\";\r\nimport { InternalTexture } from \"../Materials/Textures/internalTexture\";\r\nimport { Effect } from \"../Materials/effect\";\r\nimport { _TimeToken } from \"../Instrumentation/timeToken\";\r\nimport { _DepthCullingState, _StencilState, _AlphaState } from \"../States/index\";\r\nimport { Constants } from \"./constants\";\r\nimport { IPipelineContext } from './IPipelineContext';\r\nimport { DataBuffer } from '../Meshes/dataBuffer';\r\n\r\ndeclare const global: any;\r\n\r\n/**\r\n * Options to create the null engine\r\n */\r\nexport class NullEngineOptions {\r\n    /**\r\n     * Render width (Default: 512)\r\n     */\r\n    public renderWidth = 512;\r\n    /**\r\n     * Render height (Default: 256)\r\n     */\r\n    public renderHeight = 256;\r\n\r\n    /**\r\n     * Texture size (Default: 512)\r\n     */\r\n    public textureSize = 512;\r\n\r\n    /**\r\n     * If delta time between frames should be constant\r\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\r\n     */\r\n    public deterministicLockstep = false;\r\n\r\n    /**\r\n     * Maximum about of steps between frames (Default: 4)\r\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\r\n     */\r\n    public lockstepMaxSteps = 4;\r\n}\r\n\r\n/**\r\n * The null engine class provides support for headless version of babylon.js.\r\n * This can be used in server side scenario or for testing purposes\r\n */\r\nexport class NullEngine extends Engine {\r\n    private _options: NullEngineOptions;\r\n\r\n    /**\r\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\r\n     */\r\n    public isDeterministicLockStep(): boolean {\r\n        return this._options.deterministicLockstep;\r\n    }\r\n\r\n    /** @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep */\r\n    public getLockstepMaxSteps(): number {\r\n        return this._options.lockstepMaxSteps;\r\n    }\r\n\r\n    /**\r\n     * Sets hardware scaling, used to save performance if needed\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_sceneoptimizer\r\n     */\r\n    public getHardwareScalingLevel(): number {\r\n        return 1.0;\r\n    }\r\n\r\n    public constructor(options: NullEngineOptions = new NullEngineOptions()) {\r\n        super(null);\r\n\r\n        if (options.deterministicLockstep === undefined) {\r\n            options.deterministicLockstep = false;\r\n        }\r\n\r\n        if (options.lockstepMaxSteps === undefined) {\r\n            options.lockstepMaxSteps = 4;\r\n        }\r\n\r\n        this._options = options;\r\n\r\n        // Init caps\r\n        // We consider we are on a webgl1 capable device\r\n\r\n        this._caps = new EngineCapabilities();\r\n        this._caps.maxTexturesImageUnits = 16;\r\n        this._caps.maxVertexTextureImageUnits = 16;\r\n        this._caps.maxTextureSize = 512;\r\n        this._caps.maxCubemapTextureSize = 512;\r\n        this._caps.maxRenderTextureSize = 512;\r\n        this._caps.maxVertexAttribs = 16;\r\n        this._caps.maxVaryingVectors = 16;\r\n        this._caps.maxFragmentUniformVectors = 16;\r\n        this._caps.maxVertexUniformVectors = 16;\r\n\r\n        // Extensions\r\n        this._caps.standardDerivatives = false;\r\n\r\n        this._caps.astc = null;\r\n        this._caps.s3tc = null;\r\n        this._caps.pvrtc = null;\r\n        this._caps.etc1 = null;\r\n        this._caps.etc2 = null;\r\n\r\n        this._caps.textureAnisotropicFilterExtension = null;\r\n        this._caps.maxAnisotropy = 0;\r\n        this._caps.uintIndices = false;\r\n        this._caps.fragmentDepthSupported = false;\r\n        this._caps.highPrecisionShaderSupported = true;\r\n\r\n        this._caps.colorBufferFloat = false;\r\n        this._caps.textureFloat = false;\r\n        this._caps.textureFloatLinearFiltering = false;\r\n        this._caps.textureFloatRender = false;\r\n\r\n        this._caps.textureHalfFloat = false;\r\n        this._caps.textureHalfFloatLinearFiltering = false;\r\n        this._caps.textureHalfFloatRender = false;\r\n\r\n        this._caps.textureLOD = false;\r\n        this._caps.drawBuffersExtension = false;\r\n\r\n        this._caps.depthTextureExtension = false;\r\n        this._caps.vertexArrayObject = false;\r\n        this._caps.instancedArrays = false;\r\n\r\n        Logger.Log(`Babylon.js v${Engine.Version} - Null engine`);\r\n\r\n        // Wrappers\r\n        const theCurrentGlobal = (typeof self !== \"undefined\" ? self : typeof global !== \"undefined\" ? global : window);\r\n        if (typeof URL === \"undefined\") {\r\n            theCurrentGlobal.URL = {\r\n                createObjectURL: function() { },\r\n                revokeObjectURL: function() { }\r\n            };\r\n        }\r\n        if (typeof Blob === \"undefined\") {\r\n            theCurrentGlobal.Blob = function() { };\r\n        }\r\n    }\r\n\r\n    public createVertexBuffer(vertices: FloatArray): DataBuffer {\r\n        let buffer = new DataBuffer();\r\n        buffer.references = 1;\r\n        return buffer;\r\n    }\r\n\r\n    public createIndexBuffer(indices: IndicesArray): DataBuffer {\r\n        let buffer = new DataBuffer();\r\n        buffer.references = 1;\r\n        return buffer;\r\n    }\r\n\r\n    public clear(color: Color4, backBuffer: boolean, depth: boolean, stencil: boolean = false): void {\r\n    }\r\n\r\n    public getRenderWidth(useScreen = false): number {\r\n        if (!useScreen && this._currentRenderTarget) {\r\n            return this._currentRenderTarget.width;\r\n        }\r\n\r\n        return this._options.renderWidth;\r\n    }\r\n\r\n    public getRenderHeight(useScreen = false): number {\r\n        if (!useScreen && this._currentRenderTarget) {\r\n            return this._currentRenderTarget.height;\r\n        }\r\n\r\n        return this._options.renderHeight;\r\n    }\r\n\r\n    public setViewport(viewport: Viewport, requiredWidth?: number, requiredHeight?: number): void {\r\n        this._cachedViewport = viewport;\r\n    }\r\n\r\n    public createShaderProgram(pipelineContext: IPipelineContext, vertexCode: string, fragmentCode: string, defines: string, context?: WebGLRenderingContext): WebGLProgram {\r\n        return {\r\n            __SPECTOR_rebuildProgram: null,\r\n        };\r\n    }\r\n\r\n    public getUniforms(pipelineContext: IPipelineContext, uniformsNames: string[]): Nullable<WebGLUniformLocation>[] {\r\n        return [];\r\n    }\r\n\r\n    public getAttributes(pipelineContext: IPipelineContext, attributesNames: string[]): number[] {\r\n        return [];\r\n    }\r\n\r\n    public bindSamplers(effect: Effect): void {\r\n        this._currentEffect = null;\r\n    }\r\n\r\n    public enableEffect(effect: Effect): void {\r\n        this._currentEffect = effect;\r\n\r\n        if (effect.onBind) {\r\n            effect.onBind(effect);\r\n        }\r\n        if (effect._onBindObservable) {\r\n            effect._onBindObservable.notifyObservers(effect);\r\n        }\r\n    }\r\n\r\n    public setState(culling: boolean, zOffset: number = 0, force?: boolean, reverseSide = false): void {\r\n    }\r\n\r\n    public setIntArray(uniform: WebGLUniformLocation, array: Int32Array): void {\r\n    }\r\n\r\n    public setIntArray2(uniform: WebGLUniformLocation, array: Int32Array): void {\r\n    }\r\n\r\n    public setIntArray3(uniform: WebGLUniformLocation, array: Int32Array): void {\r\n    }\r\n\r\n    public setIntArray4(uniform: WebGLUniformLocation, array: Int32Array): void {\r\n    }\r\n\r\n    public setFloatArray(uniform: WebGLUniformLocation, array: Float32Array): void {\r\n    }\r\n\r\n    public setFloatArray2(uniform: WebGLUniformLocation, array: Float32Array): void {\r\n    }\r\n\r\n    public setFloatArray3(uniform: WebGLUniformLocation, array: Float32Array): void {\r\n    }\r\n\r\n    public setFloatArray4(uniform: WebGLUniformLocation, array: Float32Array): void {\r\n    }\r\n\r\n    public setArray(uniform: WebGLUniformLocation, array: number[]): void {\r\n    }\r\n\r\n    public setArray2(uniform: WebGLUniformLocation, array: number[]): void {\r\n    }\r\n\r\n    public setArray3(uniform: WebGLUniformLocation, array: number[]): void {\r\n    }\r\n\r\n    public setArray4(uniform: WebGLUniformLocation, array: number[]): void {\r\n    }\r\n\r\n    public setMatrices(uniform: WebGLUniformLocation, matrices: Float32Array): void {\r\n    }\r\n\r\n    public setMatrix(uniform: WebGLUniformLocation, matrix: Matrix): void {\r\n    }\r\n\r\n    public setMatrix3x3(uniform: WebGLUniformLocation, matrix: Float32Array): void {\r\n    }\r\n\r\n    public setMatrix2x2(uniform: WebGLUniformLocation, matrix: Float32Array): void {\r\n    }\r\n\r\n    public setFloat(uniform: WebGLUniformLocation, value: number): void {\r\n    }\r\n\r\n    public setFloat2(uniform: WebGLUniformLocation, x: number, y: number): void {\r\n    }\r\n\r\n    public setFloat3(uniform: WebGLUniformLocation, x: number, y: number, z: number): void {\r\n    }\r\n\r\n    public setBool(uniform: WebGLUniformLocation, bool: number): void {\r\n    }\r\n\r\n    public setFloat4(uniform: WebGLUniformLocation, x: number, y: number, z: number, w: number): void {\r\n    }\r\n\r\n    public setColor3(uniform: WebGLUniformLocation, color3: Color3): void {\r\n    }\r\n\r\n    public setColor4(uniform: WebGLUniformLocation, color3: Color3, alpha: number): void {\r\n    }\r\n\r\n    public setAlphaMode(mode: number, noDepthWriteChange: boolean = false): void {\r\n        if (this._alphaMode === mode) {\r\n            return;\r\n        }\r\n\r\n        this._alphaState.alphaBlend = (mode !== Constants.ALPHA_DISABLE);\r\n\r\n        if (!noDepthWriteChange) {\r\n            this.setDepthWrite(mode === Constants.ALPHA_DISABLE);\r\n        }\r\n        this._alphaMode = mode;\r\n    }\r\n\r\n    public bindBuffers(vertexBuffers: { [key: string]: VertexBuffer; }, indexBuffer: DataBuffer, effect: Effect): void {\r\n    }\r\n\r\n    public wipeCaches(bruteForce?: boolean): void {\r\n        if (this.preventCacheWipeBetweenFrames) {\r\n            return;\r\n        }\r\n        this.resetTextureCache();\r\n        this._currentEffect = null;\r\n\r\n        if (bruteForce) {\r\n            this._currentProgram = null;\r\n\r\n            this._stencilState.reset();\r\n            this._depthCullingState.reset();\r\n            this._alphaState.reset();\r\n        }\r\n\r\n        this._cachedVertexBuffers = null;\r\n        this._cachedIndexBuffer = null;\r\n        this._cachedEffectForVertexBuffers = null;\r\n    }\r\n\r\n    public draw(useTriangles: boolean, indexStart: number, indexCount: number, instancesCount?: number): void {\r\n    }\r\n\r\n    public drawElementsType(fillMode: number, indexStart: number, indexCount: number, instancesCount?: number): void {\r\n    }\r\n\r\n    public drawArraysType(fillMode: number, verticesStart: number, verticesCount: number, instancesCount?: number): void {\r\n    }\r\n\r\n    /** @hidden */\r\n    public _createTexture(): WebGLTexture {\r\n        return {};\r\n    }\r\n\r\n    /** @hidden */\r\n    public _releaseTexture(texture: InternalTexture): void {\r\n    }\r\n\r\n    public createTexture(urlArg: string, noMipmap: boolean, invertY: boolean, scene: Scene, samplingMode: number = Constants.TEXTURE_TRILINEAR_SAMPLINGMODE, onLoad: Nullable<() => void> = null, onError: Nullable<(message: string, exception: any) => void> = null, buffer: Nullable<ArrayBuffer | HTMLImageElement> = null, fallBack?: InternalTexture, format?: number): InternalTexture {\r\n        var texture = new InternalTexture(this, InternalTexture.DATASOURCE_URL);\r\n        var url = String(urlArg);\r\n\r\n        texture.url = url;\r\n        texture.generateMipMaps = !noMipmap;\r\n        texture.samplingMode = samplingMode;\r\n        texture.invertY = invertY;\r\n        texture.baseWidth = this._options.textureSize;\r\n        texture.baseHeight = this._options.textureSize;\r\n        texture.width = this._options.textureSize;\r\n        texture.height = this._options.textureSize;\r\n        if (format) {\r\n            texture.format = format;\r\n        }\r\n\r\n        texture.isReady = true;\r\n\r\n        if (onLoad) {\r\n            onLoad();\r\n        }\r\n\r\n        this._internalTexturesCache.push(texture);\r\n\r\n        return texture;\r\n    }\r\n\r\n    public createRenderTargetTexture(size: any, options: boolean | RenderTargetCreationOptions): InternalTexture {\r\n        let fullOptions = new RenderTargetCreationOptions();\r\n\r\n        if (options !== undefined && typeof options === \"object\") {\r\n            fullOptions.generateMipMaps = options.generateMipMaps;\r\n            fullOptions.generateDepthBuffer = options.generateDepthBuffer === undefined ? true : options.generateDepthBuffer;\r\n            fullOptions.generateStencilBuffer = fullOptions.generateDepthBuffer && options.generateStencilBuffer;\r\n            fullOptions.type = options.type === undefined ? Constants.TEXTURETYPE_UNSIGNED_INT : options.type;\r\n            fullOptions.samplingMode = options.samplingMode === undefined ? Constants.TEXTURE_TRILINEAR_SAMPLINGMODE : options.samplingMode;\r\n        } else {\r\n            fullOptions.generateMipMaps = <boolean>options;\r\n            fullOptions.generateDepthBuffer = true;\r\n            fullOptions.generateStencilBuffer = false;\r\n            fullOptions.type = Constants.TEXTURETYPE_UNSIGNED_INT;\r\n            fullOptions.samplingMode = Constants.TEXTURE_TRILINEAR_SAMPLINGMODE;\r\n        }\r\n        var texture = new InternalTexture(this, InternalTexture.DATASOURCE_RENDERTARGET);\r\n\r\n        var width = size.width || size;\r\n        var height = size.height || size;\r\n\r\n        texture._depthStencilBuffer = {};\r\n        texture._framebuffer = {};\r\n        texture.baseWidth = width;\r\n        texture.baseHeight = height;\r\n        texture.width = width;\r\n        texture.height = height;\r\n        texture.isReady = true;\r\n        texture.samples = 1;\r\n        texture.generateMipMaps = fullOptions.generateMipMaps ? true : false;\r\n        texture.samplingMode = fullOptions.samplingMode;\r\n        texture.type = fullOptions.type;\r\n        texture._generateDepthBuffer = fullOptions.generateDepthBuffer;\r\n        texture._generateStencilBuffer = fullOptions.generateStencilBuffer ? true : false;\r\n\r\n        this._internalTexturesCache.push(texture);\r\n\r\n        return texture;\r\n    }\r\n\r\n    public updateTextureSamplingMode(samplingMode: number, texture: InternalTexture): void {\r\n        texture.samplingMode = samplingMode;\r\n    }\r\n\r\n    public bindFramebuffer(texture: InternalTexture, faceIndex?: number, requiredWidth?: number, requiredHeight?: number, forceFullscreenViewport?: boolean): void {\r\n        if (this._currentRenderTarget) {\r\n            this.unBindFramebuffer(this._currentRenderTarget);\r\n        }\r\n        this._currentRenderTarget = texture;\r\n        this._currentFramebuffer = texture._MSAAFramebuffer ? texture._MSAAFramebuffer : texture._framebuffer;\r\n        if (this._cachedViewport && !forceFullscreenViewport) {\r\n            this.setViewport(this._cachedViewport, requiredWidth, requiredHeight);\r\n        }\r\n    }\r\n\r\n    public unBindFramebuffer(texture: InternalTexture, disableGenerateMipMaps = false, onBeforeUnbind?: () => void): void {\r\n        this._currentRenderTarget = null;\r\n\r\n        if (onBeforeUnbind) {\r\n            if (texture._MSAAFramebuffer) {\r\n                this._currentFramebuffer = texture._framebuffer;\r\n            }\r\n            onBeforeUnbind();\r\n        }\r\n        this._currentFramebuffer = null;\r\n    }\r\n\r\n    public createDynamicVertexBuffer(vertices: FloatArray): DataBuffer {\r\n        let buffer = new DataBuffer();\r\n        buffer.references = 1;\r\n        buffer.capacity = 1;\r\n        return buffer;\r\n    }\r\n\r\n    public updateDynamicTexture(texture: Nullable<InternalTexture>, canvas: HTMLCanvasElement, invertY: boolean, premulAlpha: boolean = false, format?: number): void {\r\n\r\n    }\r\n\r\n    public areAllEffectsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Get the current error code of the webGL context\r\n     * @returns the error code\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getError\r\n     */\r\n    public getError(): number {\r\n        return 0;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _getUnpackAlignement(): number {\r\n        return 1;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _unpackFlipY(value: boolean) {\r\n    }\r\n\r\n    public updateDynamicIndexBuffer(indexBuffer: WebGLBuffer, indices: IndicesArray, offset: number = 0): void {\r\n    }\r\n\r\n    /**\r\n     * Updates a dynamic vertex buffer.\r\n     * @param vertexBuffer the vertex buffer to update\r\n     * @param data the data used to update the vertex buffer\r\n     * @param byteOffset the byte offset of the data (optional)\r\n     * @param byteLength the byte length of the data (optional)\r\n     */\r\n    public updateDynamicVertexBuffer(vertexBuffer: WebGLBuffer, vertices: FloatArray, byteOffset?: number, byteLength?: number): void {\r\n    }\r\n\r\n    public _bindTextureDirectly(target: number, texture: InternalTexture): boolean {\r\n        if (this._boundTexturesCache[this._activeChannel] !== texture) {\r\n            this._boundTexturesCache[this._activeChannel] = texture;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _bindTexture(channel: number, texture: InternalTexture): void {\r\n        if (channel < 0) {\r\n            return;\r\n        }\r\n\r\n        this._bindTextureDirectly(0, texture);\r\n    }\r\n\r\n    /** @hidden */\r\n    public _releaseBuffer(buffer: DataBuffer): boolean {\r\n        buffer.references--;\r\n\r\n        if (buffer.references === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public releaseEffects() {\r\n    }\r\n\r\n    public displayLoadingUI(): void {\r\n    }\r\n\r\n    public hideLoadingUI(): void {\r\n    }\r\n\r\n    /** @hidden */\r\n    public _uploadCompressedDataToTextureDirectly(texture: InternalTexture, internalFormat: number, width: number, height: number, data: ArrayBufferView, faceIndex: number = 0, lod: number = 0) {\r\n    }\r\n\r\n    /** @hidden */\r\n    public _uploadDataToTextureDirectly(texture: InternalTexture, imageData: ArrayBufferView, faceIndex: number = 0, lod: number = 0): void {\r\n    }\r\n\r\n    /** @hidden */\r\n    public _uploadArrayBufferViewToTexture(texture: InternalTexture, imageData: ArrayBufferView, faceIndex: number = 0, lod: number = 0): void {\r\n    }\r\n\r\n    /** @hidden */\r\n    public _uploadImageToTexture(texture: InternalTexture, image: HTMLImageElement, faceIndex: number = 0, lod: number = 0) {\r\n    }\r\n}\r\n"]}