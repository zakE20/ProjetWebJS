import { Observable } from "../Misc/observable";
import { Nullable } from "../types";
import { Scene, IDisposable } from "../scene";
import { AbstractMesh } from "../Meshes/abstractMesh";
import { SixDofDragBehavior } from "../Behaviors/Meshes/sixDofDragBehavior";
import { RotationGizmo } from "./rotationGizmo";
import { PositionGizmo } from "./positionGizmo";
import { ScaleGizmo } from "./scaleGizmo";
import { BoundingBoxGizmo } from "./boundingBoxGizmo";
/**
 * Helps setup gizmo's in the scene to rotate/scale/position meshes
 */
export declare class GizmoManager implements IDisposable {
    private scene;
    /**
     * Gizmo's created by the gizmo manager, gizmo will be null until gizmo has been enabled for the first time
     */
    gizmos: {
        positionGizmo: Nullable<PositionGizmo>;
        rotationGizmo: Nullable<RotationGizmo>;
        scaleGizmo: Nullable<ScaleGizmo>;
        boundingBoxGizmo: Nullable<BoundingBoxGizmo>;
    };
    /** When true, the gizmo will be detached from the current object when a pointer down occurs with an empty picked mesh */
    clearGizmoOnEmptyPointerEvent: boolean;
    /** Fires an event when the manager is attached to a mesh */
    onAttachedToMeshObservable: Observable<Nullable<AbstractMesh>>;
    private _gizmosEnabled;
    private _pointerObserver;
    private _attachedMesh;
    private _boundingBoxColor;
    private _defaultUtilityLayer;
    private _defaultKeepDepthUtilityLayer;
    /**
     * When bounding box gizmo is enabled, this can be used to track drag/end events
     */
    boundingBoxDragBehavior: SixDofDragBehavior;
    /**
     * Array of meshes which will have the gizmo attached when a pointer selected them. If null, all meshes are attachable. (Default: null)
     */
    attachableMeshes: Nullable<Array<AbstractMesh>>;
    /**
     * If pointer events should perform attaching/detaching a gizmo, if false this can be done manually via attachToMesh. (Default: true)
     */
    usePointerToAttachGizmos: boolean;
    /**
     * Instatiates a gizmo manager
     * @param scene the scene to overlay the gizmos on top of
     */
    constructor(scene: Scene);
    /**
     * Attaches a set of gizmos to the specified mesh
     * @param mesh The mesh the gizmo's should be attached to
     */
    attachToMesh(mesh: Nullable<AbstractMesh>): void;
    /**
     * If the position gizmo is enabled
     */
    positionGizmoEnabled: boolean;
    /**
     * If the rotation gizmo is enabled
     */
    rotationGizmoEnabled: boolean;
    /**
     * If the scale gizmo is enabled
     */
    scaleGizmoEnabled: boolean;
    /**
     * If the boundingBox gizmo is enabled
     */
    boundingBoxGizmoEnabled: boolean;
    /**
     * Disposes of the gizmo manager
     */
    dispose(): void;
}
