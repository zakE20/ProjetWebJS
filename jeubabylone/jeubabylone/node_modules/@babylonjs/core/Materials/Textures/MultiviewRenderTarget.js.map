{"version":3,"file":"MultiviewRenderTarget.js","sourceRoot":"","sources":["../../../../sourceES6/core/Materials/Textures/MultiviewRenderTarget.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAC;AAEtE,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAE9D;;;GAGG;AACH;IAA2C,iDAAmB;IAC1D;;;;OAIG;IACH,+BAAY,KAAY,EAAE,IAA0E;QAA1E,qBAAA,EAAA,UAA0E;QAApG,YACI,kBAAM,eAAe,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,eAAe,CAAC,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,SAI9I;QAHG,IAAI,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,kCAAkC,CAAC,KAAI,CAAC,cAAc,EAAE,EAAE,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAC1H,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC;QACnC,KAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;;IACpC,CAAC;IAED;;;OAGG;IACI,gDAAgB,GAAvB,UAAwB,SAAqB;QAArB,0BAAA,EAAA,aAAqB;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QACD,IAAI,CAAC,QAAQ,EAAG,CAAC,SAAS,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAED;;;OAGG;IACI,4CAAY,GAAnB;QACI,OAAO,CAAC,CAAC;IACb,CAAC;IACL,4BAAC;AAAD,CAAC,AA/BD,CAA2C,mBAAmB,GA+B7D","sourcesContent":["import { RenderTargetTexture } from '../Textures/renderTargetTexture';\r\nimport { Scene } from '../../scene';\r\nimport { InternalTexture } from '../Textures/internalTexture';\r\n\r\n/**\r\n * Renders to multiple views with a single draw call\r\n * @see https://www.khronos.org/registry/webgl/extensions/WEBGL_multiview/\r\n */\r\nexport class MultiviewRenderTarget extends RenderTargetTexture {\r\n    /**\r\n     * Creates a multiview render target\r\n     * @param scene scene used with the render target\r\n     * @param size the size of the render target (used for each view)\r\n     */\r\n    constructor(scene: Scene, size: number | { width: number, height: number } | { ratio: number } = 512) {\r\n        super(\"multiview rtt\", size, scene, false, true, InternalTexture.DATASOURCE_UNKNOWN, false, undefined, false, false, true, undefined, true);\r\n        var internalTexture = scene.getEngine().createMultiviewRenderTargetTexture(this.getRenderWidth(), this.getRenderHeight());\r\n        internalTexture.isMultiview = true;\r\n        this._texture = internalTexture;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * @param faceIndex the face index, if its a cube texture\r\n     */\r\n    public _bindFrameBuffer(faceIndex: number = 0) {\r\n        if (!this._texture) {\r\n            return;\r\n        }\r\n        this.getScene()!.getEngine().bindMultiviewFramebuffer(this._texture);\r\n    }\r\n\r\n    /**\r\n     * Gets the number of views the corresponding to the texture (eg. a MultiviewRenderTarget will have > 1)\r\n     * @returns the view count\r\n     */\r\n    public getViewCount() {\r\n        return 2;\r\n    }\r\n}"]}