{"version":3,"file":"domManagement.js","sourceRoot":"","sources":["../../../sourceES6/core/Misc/domManagement.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH;IAAA;IA2BA,CAAC;IA1BG;;;OAGG;IACW,iCAAmB,GAAjC;QACI,OAAO,CAAC,OAAO,MAAM,CAAC,KAAK,WAAW,CAAC;IAC3C,CAAC;IAED;;;;OAIG;IACW,+BAAiB,GAA/B,UAAgC,OAAoB;QAChD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;QAE/B,OAAO,KAAK,EAAE;YACV,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACtB,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC;aAC/B;YACD,KAAK,GAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SACpC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,oBAAC;AAAD,CAAC,AA3BD,IA2BC","sourcesContent":["/**\r\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\r\n * Babylon.js\r\n */\r\nexport class DomManagement {\r\n    /**\r\n     * Checks if the window object exists\r\n     * @returns true if the window object exists\r\n     */\r\n    public static IsWindowObjectExist(): boolean {\r\n        return (typeof window) !== \"undefined\";\r\n    }\r\n\r\n    /**\r\n     * Extracts text content from a DOM element hierarchy\r\n     * @param element defines the root element\r\n     * @returns a string\r\n     */\r\n    public static GetDOMTextContent(element: HTMLElement): string {\r\n        var result = \"\";\r\n        var child = element.firstChild;\r\n\r\n        while (child) {\r\n            if (child.nodeType === 3) {\r\n                result += child.textContent;\r\n            }\r\n            child = <any>(child.nextSibling);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"]}