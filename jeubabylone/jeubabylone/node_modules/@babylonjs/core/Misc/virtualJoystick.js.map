{"version":3,"file":"virtualJoystick.js","sourceRoot":"","sources":["../../../sourceES6/core/Misc/virtualJoystick.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nullable } from \"../types\";\r\nimport { Vector3, Vector2 } from \"../Maths/math\";\r\nimport { StringDictionary } from \"./stringDictionary\";\r\n\r\n// Mainly based on these 2 articles :\r\n// Creating an universal virtual touch joystick working for all Touch models thanks to Hand.JS : http://blogs.msdn.com/b/davrous/archive/2013/02/22/creating-an-universal-virtual-touch-joystick-working-for-all-touch-models-thanks-to-hand-js.aspx\r\n// & on Seb Lee-Delisle original work: http://seb.ly/2011/04/multi-touch-game-controller-in-javascripthtml5-for-ipad/\r\n\r\n/**\r\n * Defines the potential axis of a Joystick\r\n */\r\nexport enum JoystickAxis {\r\n    /** X axis */\r\n    X,\r\n    /** Y axis */\r\n    Y,\r\n    /** Z axis */\r\n    Z\r\n}\r\n\r\n/**\r\n * Class used to define virtual joystick (used in touch mode)\r\n */\r\nexport class VirtualJoystick {\r\n    /**\r\n     * Gets or sets a boolean indicating that left and right values must be inverted\r\n     */\r\n    public reverseLeftRight: boolean;\r\n    /**\r\n     * Gets or sets a boolean indicating that up and down values must be inverted\r\n     */\r\n    public reverseUpDown: boolean;\r\n    /**\r\n     * Gets the offset value for the position (ie. the change of the position value)\r\n     */\r\n    public deltaPosition: Vector3;\r\n    /**\r\n     * Gets a boolean indicating if the virtual joystick was pressed\r\n     */\r\n    public pressed: boolean;\r\n    /**\r\n     * Canvas the virtual joystick will render onto, default z-index of this is 5\r\n     */\r\n    public static Canvas: Nullable<HTMLCanvasElement>;\r\n\r\n    // Used to draw the virtual joystick inside a 2D canvas on top of the WebGL rendering canvas\r\n    private static _globalJoystickIndex: number = 0;\r\n    private static vjCanvasContext: CanvasRenderingContext2D;\r\n    private static vjCanvasWidth: number;\r\n    private static vjCanvasHeight: number;\r\n    private static halfWidth: number;\r\n\r\n    private _action: () => any;\r\n    private _axisTargetedByLeftAndRight: JoystickAxis;\r\n    private _axisTargetedByUpAndDown: JoystickAxis;\r\n    private _joystickSensibility: number;\r\n    private _inversedSensibility: number;\r\n    private _joystickPointerID: number;\r\n    private _joystickColor: string;\r\n    private _joystickPointerPos: Vector2;\r\n    private _joystickPreviousPointerPos: Vector2;\r\n    private _joystickPointerStartPos: Vector2;\r\n    private _deltaJoystickVector: Vector2;\r\n    private _leftJoystick: boolean;\r\n    private _touches: StringDictionary<{ x: number, y: number, prevX: number, prevY: number } | PointerEvent>;\r\n\r\n    private _onPointerDownHandlerRef: (e: PointerEvent) => any;\r\n    private _onPointerMoveHandlerRef: (e: PointerEvent) => any;\r\n    private _onPointerUpHandlerRef: (e: PointerEvent) => any;\r\n    private _onResize: (e: any) => any;\r\n\r\n    /**\r\n     * Creates a new virtual joystick\r\n     * @param leftJoystick defines that the joystick is for left hand (false by default)\r\n     */\r\n    constructor(leftJoystick?: boolean) {\r\n        if (leftJoystick) {\r\n            this._leftJoystick = true;\r\n        }\r\n        else {\r\n            this._leftJoystick = false;\r\n        }\r\n\r\n        VirtualJoystick._globalJoystickIndex++;\r\n\r\n        // By default left & right arrow keys are moving the X\r\n        // and up & down keys are moving the Y\r\n        this._axisTargetedByLeftAndRight = JoystickAxis.X;\r\n        this._axisTargetedByUpAndDown = JoystickAxis.Y;\r\n\r\n        this.reverseLeftRight = false;\r\n        this.reverseUpDown = false;\r\n\r\n        // collections of pointers\r\n        this._touches = new StringDictionary<{ x: number, y: number, prevX: number, prevY: number } | PointerEvent>();\r\n        this.deltaPosition = Vector3.Zero();\r\n\r\n        this._joystickSensibility = 25;\r\n        this._inversedSensibility = 1 / (this._joystickSensibility / 1000);\r\n\r\n        this._onResize = (evt) => {\r\n            VirtualJoystick.vjCanvasWidth = window.innerWidth;\r\n            VirtualJoystick.vjCanvasHeight = window.innerHeight;\r\n            if (VirtualJoystick.Canvas) {\r\n                VirtualJoystick.Canvas.width = VirtualJoystick.vjCanvasWidth;\r\n                VirtualJoystick.Canvas.height = VirtualJoystick.vjCanvasHeight;\r\n            }\r\n            VirtualJoystick.halfWidth = VirtualJoystick.vjCanvasWidth / 2;\r\n        };\r\n\r\n        // injecting a canvas element on top of the canvas 3D game\r\n        if (!VirtualJoystick.Canvas) {\r\n            window.addEventListener(\"resize\", this._onResize, false);\r\n            VirtualJoystick.Canvas = document.createElement(\"canvas\");\r\n            VirtualJoystick.vjCanvasWidth = window.innerWidth;\r\n            VirtualJoystick.vjCanvasHeight = window.innerHeight;\r\n            VirtualJoystick.Canvas.width = window.innerWidth;\r\n            VirtualJoystick.Canvas.height = window.innerHeight;\r\n            VirtualJoystick.Canvas.style.width = \"100%\";\r\n            VirtualJoystick.Canvas.style.height = \"100%\";\r\n            VirtualJoystick.Canvas.style.position = \"absolute\";\r\n            VirtualJoystick.Canvas.style.backgroundColor = \"transparent\";\r\n            VirtualJoystick.Canvas.style.top = \"0px\";\r\n            VirtualJoystick.Canvas.style.left = \"0px\";\r\n            VirtualJoystick.Canvas.style.zIndex = \"5\";\r\n            VirtualJoystick.Canvas.style.msTouchAction = \"none\";\r\n            // Support for jQuery PEP polyfill\r\n            VirtualJoystick.Canvas.setAttribute(\"touch-action\", \"none\");\r\n            let context = VirtualJoystick.Canvas.getContext('2d');\r\n\r\n            if (!context) {\r\n                throw new Error(\"Unable to create canvas for virtual joystick\");\r\n            }\r\n\r\n            VirtualJoystick.vjCanvasContext = context;\r\n            VirtualJoystick.vjCanvasContext.strokeStyle = \"#ffffff\";\r\n            VirtualJoystick.vjCanvasContext.lineWidth = 2;\r\n            document.body.appendChild(VirtualJoystick.Canvas);\r\n        }\r\n        VirtualJoystick.halfWidth = VirtualJoystick.Canvas.width / 2;\r\n        this.pressed = false;\r\n        // default joystick color\r\n        this._joystickColor = \"cyan\";\r\n\r\n        this._joystickPointerID = -1;\r\n        // current joystick position\r\n        this._joystickPointerPos = new Vector2(0, 0);\r\n        this._joystickPreviousPointerPos = new Vector2(0, 0);\r\n        // origin joystick position\r\n        this._joystickPointerStartPos = new Vector2(0, 0);\r\n        this._deltaJoystickVector = new Vector2(0, 0);\r\n\r\n        this._onPointerDownHandlerRef = (evt) => {\r\n            this._onPointerDown(evt);\r\n        };\r\n        this._onPointerMoveHandlerRef = (evt) => {\r\n            this._onPointerMove(evt);\r\n        };\r\n        this._onPointerUpHandlerRef = (evt) => {\r\n            this._onPointerUp(evt);\r\n        };\r\n\r\n        VirtualJoystick.Canvas.addEventListener('pointerdown', this._onPointerDownHandlerRef, false);\r\n        VirtualJoystick.Canvas.addEventListener('pointermove', this._onPointerMoveHandlerRef, false);\r\n        VirtualJoystick.Canvas.addEventListener('pointerup', this._onPointerUpHandlerRef, false);\r\n        VirtualJoystick.Canvas.addEventListener('pointerout', this._onPointerUpHandlerRef, false);\r\n        VirtualJoystick.Canvas.addEventListener(\"contextmenu\", (evt) => {\r\n            evt.preventDefault();    // Disables system menu\r\n        }, false);\r\n        requestAnimationFrame(() => { this._drawVirtualJoystick(); });\r\n    }\r\n\r\n    /**\r\n     * Defines joystick sensibility (ie. the ratio beteen a physical move and virtual joystick position change)\r\n     * @param newJoystickSensibility defines the new sensibility\r\n     */\r\n    public setJoystickSensibility(newJoystickSensibility: number) {\r\n        this._joystickSensibility = newJoystickSensibility;\r\n        this._inversedSensibility = 1 / (this._joystickSensibility / 1000);\r\n    }\r\n\r\n    private _onPointerDown(e: PointerEvent) {\r\n        var positionOnScreenCondition: boolean;\r\n\r\n        e.preventDefault();\r\n\r\n        if (this._leftJoystick === true) {\r\n            positionOnScreenCondition = (e.clientX < VirtualJoystick.halfWidth);\r\n        }\r\n        else {\r\n            positionOnScreenCondition = (e.clientX > VirtualJoystick.halfWidth);\r\n        }\r\n\r\n        if (positionOnScreenCondition && this._joystickPointerID < 0) {\r\n            // First contact will be dedicated to the virtual joystick\r\n            this._joystickPointerID = e.pointerId;\r\n            this._joystickPointerStartPos.x = e.clientX;\r\n            this._joystickPointerStartPos.y = e.clientY;\r\n            this._joystickPointerPos = this._joystickPointerStartPos.clone();\r\n            this._joystickPreviousPointerPos = this._joystickPointerStartPos.clone();\r\n            this._deltaJoystickVector.x = 0;\r\n            this._deltaJoystickVector.y = 0;\r\n            this.pressed = true;\r\n            this._touches.add(e.pointerId.toString(), e);\r\n        }\r\n        else {\r\n            // You can only trigger the action buttons with a joystick declared\r\n            if (VirtualJoystick._globalJoystickIndex < 2 && this._action) {\r\n                this._action();\r\n                this._touches.add(e.pointerId.toString(), { x: e.clientX, y: e.clientY, prevX: e.clientX, prevY: e.clientY });\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onPointerMove(e: PointerEvent) {\r\n        // If the current pointer is the one associated to the joystick (first touch contact)\r\n        if (this._joystickPointerID == e.pointerId) {\r\n            this._joystickPointerPos.x = e.clientX;\r\n            this._joystickPointerPos.y = e.clientY;\r\n            this._deltaJoystickVector = this._joystickPointerPos.clone();\r\n            this._deltaJoystickVector = this._deltaJoystickVector.subtract(this._joystickPointerStartPos);\r\n\r\n            var directionLeftRight = this.reverseLeftRight ? -1 : 1;\r\n            var deltaJoystickX = directionLeftRight * this._deltaJoystickVector.x / this._inversedSensibility;\r\n            switch (this._axisTargetedByLeftAndRight) {\r\n                case JoystickAxis.X:\r\n                    this.deltaPosition.x = Math.min(1, Math.max(-1, deltaJoystickX));\r\n                    break;\r\n                case JoystickAxis.Y:\r\n                    this.deltaPosition.y = Math.min(1, Math.max(-1, deltaJoystickX));\r\n                    break;\r\n                case JoystickAxis.Z:\r\n                    this.deltaPosition.z = Math.min(1, Math.max(-1, deltaJoystickX));\r\n                    break;\r\n            }\r\n            var directionUpDown = this.reverseUpDown ? 1 : -1;\r\n            var deltaJoystickY = directionUpDown * this._deltaJoystickVector.y / this._inversedSensibility;\r\n            switch (this._axisTargetedByUpAndDown) {\r\n                case JoystickAxis.X:\r\n                    this.deltaPosition.x = Math.min(1, Math.max(-1, deltaJoystickY));\r\n                    break;\r\n                case JoystickAxis.Y:\r\n                    this.deltaPosition.y = Math.min(1, Math.max(-1, deltaJoystickY));\r\n                    break;\r\n                case JoystickAxis.Z:\r\n                    this.deltaPosition.z = Math.min(1, Math.max(-1, deltaJoystickY));\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            let data = this._touches.get(e.pointerId.toString());\r\n            if (data) {\r\n                (data as any).x = e.clientX;\r\n                (data as any).y = e.clientY;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onPointerUp(e: PointerEvent) {\r\n        if (this._joystickPointerID == e.pointerId) {\r\n            VirtualJoystick.vjCanvasContext.clearRect(this._joystickPointerStartPos.x - 64, this._joystickPointerStartPos.y - 64, 128, 128);\r\n            VirtualJoystick.vjCanvasContext.clearRect(this._joystickPreviousPointerPos.x - 42, this._joystickPreviousPointerPos.y - 42, 84, 84);\r\n            this._joystickPointerID = -1;\r\n            this.pressed = false;\r\n        }\r\n        else {\r\n            var touch = <{ x: number, y: number, prevX: number, prevY: number }>this._touches.get(e.pointerId.toString());\r\n            if (touch) {\r\n                VirtualJoystick.vjCanvasContext.clearRect(touch.prevX - 44, touch.prevY - 44, 88, 88);\r\n            }\r\n        }\r\n        this._deltaJoystickVector.x = 0;\r\n        this._deltaJoystickVector.y = 0;\r\n\r\n        this._touches.remove(e.pointerId.toString());\r\n    }\r\n\r\n    /**\r\n    * Change the color of the virtual joystick\r\n    * @param newColor a string that must be a CSS color value (like \"red\") or the hexa value (like \"#FF0000\")\r\n    */\r\n    public setJoystickColor(newColor: string) {\r\n        this._joystickColor = newColor;\r\n    }\r\n\r\n    /**\r\n     * Defines a callback to call when the joystick is touched\r\n     * @param action defines the callback\r\n     */\r\n    public setActionOnTouch(action: () => any) {\r\n        this._action = action;\r\n    }\r\n\r\n    /**\r\n     * Defines which axis you'd like to control for left & right\r\n     * @param axis defines the axis to use\r\n     */\r\n    public setAxisForLeftRight(axis: JoystickAxis) {\r\n        switch (axis) {\r\n            case JoystickAxis.X:\r\n            case JoystickAxis.Y:\r\n            case JoystickAxis.Z:\r\n                this._axisTargetedByLeftAndRight = axis;\r\n                break;\r\n            default:\r\n                this._axisTargetedByLeftAndRight = JoystickAxis.X;\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines which axis you'd like to control for up & down\r\n     * @param axis defines the axis to use\r\n     */\r\n    public setAxisForUpDown(axis: JoystickAxis) {\r\n        switch (axis) {\r\n            case JoystickAxis.X:\r\n            case JoystickAxis.Y:\r\n            case JoystickAxis.Z:\r\n                this._axisTargetedByUpAndDown = axis;\r\n                break;\r\n            default:\r\n                this._axisTargetedByUpAndDown = JoystickAxis.Y;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _drawVirtualJoystick() {\r\n        if (this.pressed) {\r\n            this._touches.forEach((key, touch) => {\r\n                if ((<PointerEvent>touch).pointerId === this._joystickPointerID) {\r\n                    VirtualJoystick.vjCanvasContext.clearRect(this._joystickPointerStartPos.x - 64, this._joystickPointerStartPos.y - 64, 128, 128);\r\n                    VirtualJoystick.vjCanvasContext.clearRect(this._joystickPreviousPointerPos.x - 42, this._joystickPreviousPointerPos.y - 42, 84, 84);\r\n                    VirtualJoystick.vjCanvasContext.beginPath();\r\n                    VirtualJoystick.vjCanvasContext.lineWidth = 6;\r\n                    VirtualJoystick.vjCanvasContext.strokeStyle = this._joystickColor;\r\n                    VirtualJoystick.vjCanvasContext.arc(this._joystickPointerStartPos.x, this._joystickPointerStartPos.y, 40, 0, Math.PI * 2, true);\r\n                    VirtualJoystick.vjCanvasContext.stroke();\r\n                    VirtualJoystick.vjCanvasContext.closePath();\r\n                    VirtualJoystick.vjCanvasContext.beginPath();\r\n                    VirtualJoystick.vjCanvasContext.strokeStyle = this._joystickColor;\r\n                    VirtualJoystick.vjCanvasContext.lineWidth = 2;\r\n                    VirtualJoystick.vjCanvasContext.arc(this._joystickPointerStartPos.x, this._joystickPointerStartPos.y, 60, 0, Math.PI * 2, true);\r\n                    VirtualJoystick.vjCanvasContext.stroke();\r\n                    VirtualJoystick.vjCanvasContext.closePath();\r\n                    VirtualJoystick.vjCanvasContext.beginPath();\r\n                    VirtualJoystick.vjCanvasContext.strokeStyle = this._joystickColor;\r\n                    VirtualJoystick.vjCanvasContext.arc(this._joystickPointerPos.x, this._joystickPointerPos.y, 40, 0, Math.PI * 2, true);\r\n                    VirtualJoystick.vjCanvasContext.stroke();\r\n                    VirtualJoystick.vjCanvasContext.closePath();\r\n                    this._joystickPreviousPointerPos = this._joystickPointerPos.clone();\r\n                }\r\n                else {\r\n                    VirtualJoystick.vjCanvasContext.clearRect((<any>touch).prevX - 44, (<any>touch).prevY - 44, 88, 88);\r\n                    VirtualJoystick.vjCanvasContext.beginPath();\r\n                    VirtualJoystick.vjCanvasContext.fillStyle = \"white\";\r\n                    VirtualJoystick.vjCanvasContext.beginPath();\r\n                    VirtualJoystick.vjCanvasContext.strokeStyle = \"red\";\r\n                    VirtualJoystick.vjCanvasContext.lineWidth = 6;\r\n                    VirtualJoystick.vjCanvasContext.arc(touch.x, touch.y, 40, 0, Math.PI * 2, true);\r\n                    VirtualJoystick.vjCanvasContext.stroke();\r\n                    VirtualJoystick.vjCanvasContext.closePath();\r\n                    (<any>touch).prevX = touch.x;\r\n                    (<any>touch).prevY = touch.y;\r\n                }\r\n            });\r\n        }\r\n        requestAnimationFrame(() => { this._drawVirtualJoystick(); });\r\n    }\r\n\r\n    /**\r\n     * Release internal HTML canvas\r\n     */\r\n    public releaseCanvas() {\r\n        if (VirtualJoystick.Canvas) {\r\n            VirtualJoystick.Canvas.removeEventListener('pointerdown', this._onPointerDownHandlerRef);\r\n            VirtualJoystick.Canvas.removeEventListener('pointermove', this._onPointerMoveHandlerRef);\r\n            VirtualJoystick.Canvas.removeEventListener('pointerup', this._onPointerUpHandlerRef);\r\n            VirtualJoystick.Canvas.removeEventListener('pointerout', this._onPointerUpHandlerRef);\r\n            window.removeEventListener(\"resize\", this._onResize);\r\n            document.body.removeChild(VirtualJoystick.Canvas);\r\n            VirtualJoystick.Canvas = null;\r\n        }\r\n    }\r\n}\r\n"]}