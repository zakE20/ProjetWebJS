{"version":3,"file":"scrollViewer.js","sourceRoot":"","sources":["../../../../../sourceES6/gui/src/2D/controls/scrollViewers/scrollViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nullable } from \"@babylonjs/core/types\";\r\nimport { Observer } from \"@babylonjs/core/Misc/observable\";\r\nimport { PointerInfo, PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents\";\r\n\r\nimport { Rectangle } from \"../rectangle\";\r\nimport { Grid } from \"../grid\";\r\nimport { Control } from \"../control\";\r\nimport { Container } from \"../container\";\r\nimport { Measure } from \"../../measure\";\r\nimport { AdvancedDynamicTexture } from \"../../advancedDynamicTexture\";\r\nimport { _ScrollViewerWindow } from \"./scrollViewerWindow\";\r\nimport { ScrollBar } from \"../sliders/scrollBar\";\r\n\r\n/**\r\n * Class used to hold a viewer window and sliders in a grid\r\n*/\r\nexport class ScrollViewer extends Rectangle {\r\n    private _grid: Grid;\r\n    private _horizontalBarSpace: Rectangle;\r\n    private _verticalBarSpace: Rectangle;\r\n    private _dragSpace: Rectangle;\r\n    private _horizontalBar: ScrollBar;\r\n    private _verticalBar: ScrollBar;\r\n    private _barColor: string;\r\n    private _barBackground: string;\r\n    private _barSize: number = 20;\r\n    private _endLeft: number;\r\n    private _endTop: number;\r\n    private _window: _ScrollViewerWindow;\r\n    private _pointerIsOver: Boolean = false;\r\n    private _wheelPrecision: number = 0.05;\r\n    private _onPointerObserver: Nullable<Observer<PointerInfo>>;\r\n    private _clientWidth: number;\r\n    private _clientHeight: number;\r\n\r\n    /**\r\n     * Gets the horizontal scrollbar\r\n     */\r\n    public get horizontalBar(): ScrollBar {\r\n        return this._horizontalBar;\r\n    }\r\n\r\n    /**\r\n     * Gets the vertical scrollbar\r\n     */\r\n    public get verticalBar(): ScrollBar {\r\n        return this._verticalBar;\r\n    }\r\n\r\n    /**\r\n     * Adds a new control to the current container\r\n     * @param control defines the control to add\r\n     * @returns the current container\r\n     */\r\n    public addControl(control: Nullable<Control>): Container {\r\n        if (!control) {\r\n            return this;\r\n        }\r\n\r\n        this._window.addControl(control);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Removes a control from the current container\r\n     * @param control defines the control to remove\r\n     * @returns the current container\r\n     */\r\n    public removeControl(control: Control): Container {\r\n        this._window.removeControl(control);\r\n        return this;\r\n    }\r\n\r\n    /** Gets the list of children */\r\n    public get children(): Control[] {\r\n        return this._window.children;\r\n    }\r\n\r\n    public _flagDescendantsAsMatrixDirty(): void {\r\n        for (var child of this._children) {\r\n            child._markMatrixAsDirty();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Creates a new ScrollViewer\r\n    * @param name of ScrollViewer\r\n    */\r\n    constructor(name?: string) {\r\n        super(name);\r\n\r\n        this.onDirtyObservable.add(() => {\r\n            this._horizontalBarSpace.color = this.color;\r\n            this._verticalBarSpace.color = this.color;\r\n            this._dragSpace.color = this.color;\r\n        });\r\n\r\n        this.onPointerEnterObservable.add(() => {\r\n            this._pointerIsOver = true;\r\n        });\r\n\r\n        this.onPointerOutObservable.add(() => {\r\n            this._pointerIsOver = false;\r\n        });\r\n\r\n        this._grid = new Grid();\r\n        this._horizontalBar = new ScrollBar();\r\n        this._verticalBar = new ScrollBar();\r\n\r\n        this._window = new _ScrollViewerWindow();\r\n        this._window.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        this._window.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n\r\n        this._grid.addColumnDefinition(1);\r\n        this._grid.addColumnDefinition(0, true);\r\n        this._grid.addRowDefinition(1);\r\n        this._grid.addRowDefinition(0, true);\r\n\r\n        super.addControl(this._grid);\r\n        this._grid.addControl(this._window, 0, 0);\r\n\r\n        this._verticalBar.paddingLeft = 0;\r\n        this._verticalBar.width = \"100%\";\r\n        this._verticalBar.height = \"100%\";\r\n        this._verticalBar.barOffset = 0;\r\n        this._verticalBar.value = 0;\r\n        this._verticalBar.maximum = 1;\r\n        this._verticalBar.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n        this._verticalBar.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n        this._verticalBar.isVertical = true;\r\n        this._verticalBar.rotation = Math.PI;\r\n        this._verticalBar.isVisible = false;\r\n\r\n        this._verticalBarSpace = new Rectangle();\r\n        this._verticalBarSpace.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        this._verticalBarSpace.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n        this._verticalBarSpace.thickness = 1;\r\n        this._grid.addControl(this._verticalBarSpace, 0, 1);\r\n        this._verticalBarSpace.addControl(this._verticalBar);\r\n\r\n        this._verticalBar.onValueChangedObservable.add((value) => {\r\n            this._window.top = value * this._endTop + \"px\";\r\n        });\r\n\r\n        this._horizontalBar.paddingLeft = 0;\r\n        this._horizontalBar.width = \"100%\";\r\n        this._horizontalBar.height = \"100%\";\r\n        this._horizontalBar.barOffset = 0;\r\n        this._horizontalBar.value = 0;\r\n        this._horizontalBar.maximum = 1;\r\n        this._horizontalBar.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n        this._horizontalBar.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n        this._horizontalBar.isVisible = false;\r\n\r\n        this._horizontalBarSpace = new Rectangle();\r\n        this._horizontalBarSpace.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        this._horizontalBarSpace.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n        this._horizontalBarSpace.thickness = 1;\r\n        this._grid.addControl(this._horizontalBarSpace, 1, 0);\r\n        this._horizontalBarSpace.addControl(this._horizontalBar);\r\n\r\n        this._horizontalBar.onValueChangedObservable.add((value) => {\r\n            this._window.left = value * this._endLeft + \"px\";\r\n        });\r\n\r\n        this._dragSpace = new Rectangle();\r\n        this._dragSpace.thickness = 1;\r\n        this._grid.addControl(this._dragSpace, 1, 1);\r\n\r\n        // Colors\r\n        this.barColor = \"grey\";\r\n        this.barBackground = \"transparent\";\r\n    }\r\n\r\n    /** Reset the scroll viewer window to initial size */\r\n    public resetWindow() {\r\n        this._window.width = \"100%\";\r\n        this._window.height = \"100%\";\r\n    }\r\n\r\n    protected _getTypeName(): string {\r\n        return \"ScrollViewer\";\r\n    }\r\n\r\n    private _buildClientSizes() {\r\n        this._window.parentClientWidth = this._currentMeasure.width - (this._verticalBar.isVisible ? this._barSize : 0) - 2 * this.thickness;\r\n        this._window.parentClientHeight = this._currentMeasure.height - (this._horizontalBar.isVisible ? this._barSize : 0) - 2 * this.thickness;\r\n\r\n        this._clientWidth = this._window.parentClientWidth;\r\n        this._clientHeight = this._window.parentClientHeight;\r\n    }\r\n\r\n    protected _additionalProcessing(parentMeasure: Measure, context: CanvasRenderingContext2D): void {\r\n        super._additionalProcessing(parentMeasure, context);\r\n\r\n        this._buildClientSizes();\r\n    }\r\n\r\n    protected _postMeasure(): void {\r\n        super._postMeasure();\r\n\r\n        this._updateScroller();\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the mouse wheel precision\r\n     * from 0 to 1 with a default value of 0.05\r\n     * */\r\n    public get wheelPrecision(): number {\r\n        return this._wheelPrecision;\r\n    }\r\n\r\n    public set wheelPrecision(value: number) {\r\n        if (this._wheelPrecision === value) {\r\n            return;\r\n        }\r\n\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n\r\n        if (value > 1) {\r\n            value = 1;\r\n        }\r\n\r\n        this._wheelPrecision = value;\r\n    }\r\n\r\n    /** Gets or sets the bar color */\r\n    public get barColor(): string {\r\n        return this._barColor;\r\n    }\r\n\r\n    public set barColor(color: string) {\r\n        if (this._barColor === color) {\r\n            return;\r\n        }\r\n\r\n        this._barColor = color;\r\n        this._horizontalBar.color = color;\r\n        this._verticalBar.color = color;\r\n    }\r\n\r\n    /** Gets or sets the size of the bar */\r\n    public get barSize(): number {\r\n        return this._barSize;\r\n    }\r\n\r\n    public set barSize(value: number) {\r\n        if (this._barSize === value) {\r\n            return;\r\n        }\r\n\r\n        this._barSize = value;\r\n        this._markAsDirty();\r\n\r\n        if (this._horizontalBar.isVisible) {\r\n            this._grid.setRowDefinition(1, this._barSize, true);\r\n        }\r\n        if (this._verticalBar.isVisible) {\r\n            this._grid.setColumnDefinition(1, this._barSize, true);\r\n        }\r\n    }\r\n\r\n    /** Gets or sets the bar background */\r\n    public get barBackground(): string {\r\n        return this._barBackground;\r\n    }\r\n\r\n    public set barBackground(color: string) {\r\n        if (this._barBackground === color) {\r\n            return;\r\n        }\r\n\r\n        this._barBackground = color;\r\n        this._horizontalBar.background = color;\r\n        this._verticalBar.background = color;\r\n        this._dragSpace.background = color;\r\n    }\r\n\r\n    /** @hidden */\r\n    private _updateScroller(): void {\r\n        let windowContentsWidth = this._window._currentMeasure.width;\r\n        let windowContentsHeight = this._window._currentMeasure.height;\r\n\r\n        if (this._horizontalBar.isVisible && windowContentsWidth <= this._clientWidth) {\r\n            this._grid.setRowDefinition(1, 0, true);\r\n            this._horizontalBar.isVisible = false;\r\n            this._horizontalBar.value = 0;\r\n            this._rebuildLayout = true;\r\n        }\r\n        else if (!this._horizontalBar.isVisible && windowContentsWidth > this._clientWidth) {\r\n            this._grid.setRowDefinition(1, this._barSize, true);\r\n            this._horizontalBar.isVisible = true;\r\n            this._rebuildLayout = true;\r\n        }\r\n\r\n        if (this._verticalBar.isVisible && windowContentsHeight <= this._clientHeight) {\r\n            this._grid.setColumnDefinition(1, 0, true);\r\n            this._verticalBar.isVisible = false;\r\n            this._verticalBar.value = 0;\r\n            this._rebuildLayout = true;\r\n        }\r\n        else if (!this._verticalBar.isVisible && windowContentsHeight > this._clientHeight) {\r\n            this._grid.setColumnDefinition(1, this._barSize, true);\r\n            this._verticalBar.isVisible = true;\r\n            this._rebuildLayout = true;\r\n        }\r\n\r\n        this._buildClientSizes();\r\n        this._endLeft = this._clientWidth - windowContentsWidth;\r\n        this._endTop = this._clientHeight - windowContentsHeight;\r\n\r\n        const newLeft = this._horizontalBar.value * this._endLeft + \"px\";\r\n        const newTop = this._verticalBar.value * this._endTop + \"px\";\r\n\r\n        if (newLeft !== this._window.left) {\r\n            this._window.left = newLeft;\r\n            this._rebuildLayout = true;\r\n        }\r\n\r\n        if (newTop !== this._window.top) {\r\n            this._window.top = newTop;\r\n            this._rebuildLayout = true;\r\n        }\r\n\r\n        let horizontalMultiplicator = this._clientWidth / windowContentsWidth;\r\n        let verticalMultiplicator = this._clientHeight / windowContentsHeight;\r\n\r\n        this._horizontalBar.thumbWidth = (this._clientWidth * horizontalMultiplicator) + \"px\";\r\n        this._verticalBar.thumbWidth = (this._clientHeight * verticalMultiplicator) + \"px\";\r\n    }\r\n\r\n    public _link(host: AdvancedDynamicTexture): void {\r\n        super._link(host);\r\n\r\n        this._attachWheel();\r\n    }\r\n\r\n    /** @hidden */\r\n    private _attachWheel() {\r\n        if (!this._host || this._onPointerObserver) {\r\n            return;\r\n        }\r\n\r\n        let scene = this._host.getScene();\r\n        this._onPointerObserver = scene!.onPointerObservable.add((pi, state) => {\r\n            if (!this._pointerIsOver || pi.type !== PointerEventTypes.POINTERWHEEL) {\r\n                return;\r\n            }\r\n            if (this._verticalBar.isVisible == true) {\r\n                if ((<MouseWheelEvent>pi.event).deltaY < 0 && this._verticalBar.value > 0) {\r\n                    this._verticalBar.value -= this._wheelPrecision;\r\n                } else if ((<MouseWheelEvent>pi.event).deltaY > 0 && this._verticalBar.value < this._verticalBar.maximum) {\r\n                    this._verticalBar.value += this._wheelPrecision;\r\n                }\r\n            }\r\n            if (this._horizontalBar.isVisible == true) {\r\n                if ((<MouseWheelEvent>pi.event).deltaX < 0 && this._horizontalBar.value < this._horizontalBar.maximum) {\r\n                    this._horizontalBar.value += this._wheelPrecision;\r\n                } else if ((<MouseWheelEvent>pi.event).deltaX > 0 && this._horizontalBar.value > 0) {\r\n                    this._horizontalBar.value -= this._wheelPrecision;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public _renderHighlightSpecific(context: CanvasRenderingContext2D): void {\r\n        if (!this.isHighlighted) {\r\n            return;\r\n        }\r\n\r\n        super._renderHighlightSpecific(context);\r\n\r\n        this._grid._renderHighlightSpecific(context);\r\n\r\n        context.restore();\r\n    }\r\n\r\n    /** Releases associated resources */\r\n    public dispose() {\r\n        let scene = this._host.getScene();\r\n        if (scene && this._onPointerObserver) {\r\n            scene.onPointerObservable.remove(this._onPointerObserver);\r\n            this._onPointerObserver = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n}"]}